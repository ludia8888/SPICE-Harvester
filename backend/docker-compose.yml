version: '3.8'

services:
  # TerminusDB
  terminusdb:
    image: terminusdb/terminusdb-server:latest
    container_name: spice_terminusdb
    environment:
      - TERMINUSDB_ADMIN_PASS=${TERMINUSDB_ADMIN_PASS:-admin123}
      - TERMINUSDB_SERVER_NAME=${TERMINUSDB_SERVER_NAME:-SpiceTerminusDB}
      - TERMINUSDB_AUTOLOGIN=false
    ports:
      - "6363:6363"
    volumes:
      - terminusdb_data:/app/terminusdb/storage
    networks:
      - spice_network
    healthcheck:
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 5

  # OMS (Ontology Management Service)
  oms:
    build:
      context: .
      dockerfile: ./oms/Dockerfile
    container_name: spice_oms
    environment:
      - TERMINUS_SERVER_URL=${TERMINUS_SERVER_URL:-http://terminusdb:6363}
      - TERMINUS_USER=${TERMINUS_USER:-admin}
      - TERMINUS_ACCOUNT=${TERMINUS_ACCOUNT:-admin}
      - TERMINUS_KEY=${TERMINUS_KEY:-${TERMINUSDB_ADMIN_PASS:-admin123}}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - USE_HTTPS=${USE_HTTPS:-false}
      - SSL_CERT_PATH=${SSL_CERT_PATH:-}
      - SSL_KEY_PATH=${SSL_KEY_PATH:-}
      - VERIFY_SSL=${VERIFY_SSL:-false}
    ports:
      - "8000:8000"
    depends_on:
      terminusdb:
        condition: service_healthy
    networks:
      - spice_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    # volumes:
      # - ./shared:/app/shared  # No longer needed with proper package install

  # BFF (Backend for Frontend)
  bff:
    build:
      context: .
      dockerfile: ./bff/Dockerfile
    container_name: spice_bff
    environment:
      - OMS_BASE_URL=${OMS_BASE_URL:-http://oms:8000}
      - FUNNEL_BASE_URL=${FUNNEL_BASE_URL:-http://funnel:8003}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - USE_HTTPS=${USE_HTTPS:-false}
      - SSL_CERT_PATH=${SSL_CERT_PATH:-}
      - SSL_KEY_PATH=${SSL_KEY_PATH:-}
      - VERIFY_SSL=${VERIFY_SSL:-false}
    ports:
      - "8002:8002"
    depends_on:
      oms:
        condition: service_healthy
      funnel:
        condition: service_healthy
    networks:
      - spice_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      # - ./shared:/app/shared  # No longer needed with proper package install
      - bff_data:/app/data

  # Funnel (Type Inference Service)
  funnel:
    build:
      context: .
      dockerfile: ./funnel/Dockerfile
    container_name: spice_funnel
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - USE_HTTPS=${USE_HTTPS:-false}
      - SSL_CERT_PATH=${SSL_CERT_PATH:-}
      - SSL_KEY_PATH=${SSL_KEY_PATH:-}
      - VERIFY_SSL=${VERIFY_SSL:-false}
    ports:
      - "8004:8003"
    networks:
      - spice_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      
  # Message Relay Service (Outbox Pattern)
  message-relay:
    build:
      context: .
      dockerfile: ./message_relay/Dockerfile
    container_name: spice_message_relay
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-spiceadmin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-spicepass123}
      - POSTGRES_DB=${POSTGRES_DB:-spicedb}
      - KAFKA_HOST=${KAFKA_HOST:-kafka}
      - KAFKA_PORT=${KAFKA_PORT:-29092}
      - MESSAGE_RELAY_BATCH_SIZE=${MESSAGE_RELAY_BATCH_SIZE:-100}
      - MESSAGE_RELAY_POLL_INTERVAL=${MESSAGE_RELAY_POLL_INTERVAL:-5}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - oms
    networks:
      - spice_network
    restart: unless-stopped

volumes:
  terminusdb_data:
  bff_data:

networks:
  spice_network:
    driver: bridge