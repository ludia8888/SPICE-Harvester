# SPICE HARVESTER Development Nginx Configuration
# 개발 환경용 간단한 리버스 프록시 설정

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 업스트림 서버 정의
    upstream oms_backend {
        server host.docker.internal:8000;
    }

    upstream bff_backend {
        server host.docker.internal:8002;
    }

    upstream funnel_backend {
        server host.docker.internal:8003;
    }

    upstream terminusdb_backend {
        server host.docker.internal:6363;
    }

    # HTTPS 서버 설정 (개발용)
    server {
        listen 443 ssl http2;
        server_name localhost;

        # 자체 서명 인증서 사용
        ssl_certificate /ssl/common/server.crt;
        ssl_certificate_key /ssl/common/server.key;

        # SSL 설정 (개발 환경용으로 완화)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # BFF (기본 API)
        location /api/v1/ {
            proxy_pass https://bff_backend/api/v1/;
            proxy_ssl_verify off;  # 개발 환경에서는 SSL 검증 비활성화
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # OMS (직접 접근용)
        location /oms/ {
            proxy_pass https://oms_backend/;
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Funnel
        location /funnel/ {
            proxy_pass https://funnel_backend/;
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # TerminusDB
        location /terminusdb/ {
            proxy_pass https://terminusdb_backend/;
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API 문서
        location /docs {
            proxy_pass https://bff_backend/docs;
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # 헬스 체크
        location /health {
            access_log off;
            default_type application/json;
            return 200 '{"status":"healthy","environment":"development"}';
        }

        # 루트
        location / {
            proxy_pass https://bff_backend/;
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP 서버 (HTTPS로 리다이렉트)
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }
}