# SPICE HARVESTER Production Nginx Configuration
# 프로덕션 환경용 리버스 프록시 설정

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 로깅 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;

    # 성능 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/atom+xml image/svg+xml;

    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # 업스트림 서버 정의
    upstream oms_backend {
        server oms:8000 max_fails=3 fail_timeout=30s;
    }

    upstream bff_backend {
        server bff:8002 max_fails=3 fail_timeout=30s;
    }

    upstream funnel_backend {
        server funnel:8003 max_fails=3 fail_timeout=30s;
    }

    upstream terminusdb_backend {
        server terminusdb:6363 max_fails=3 fail_timeout=30s;
    }

    # HTTP to HTTPS 리다이렉트
    server {
        listen 80;
        server_name _;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS 서버 설정
    server {
        listen 443 ssl http2;
        server_name spice-harvester.com;  # 실제 도메인으로 변경

        # SSL 인증서 경로 (Let's Encrypt 또는 상용 인증서)
        ssl_certificate /ssl/live/spice-harvester.com/fullchain.pem;
        ssl_certificate_key /ssl/live/spice-harvester.com/privkey.pem;

        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # 보안 헤더
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # BFF (기본 API 엔드포인트)
        location /api/ {
            proxy_pass http://bff_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # OMS (내부 관리용 - 선택적으로 노출)
        location /api/oms/ {
            # 접근 제한 (선택사항)
            # allow 10.0.0.0/8;
            # deny all;
            
            proxy_pass http://oms_backend/api/v1/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Funnel (타입 추론 서비스)
        location /api/funnel/ {
            proxy_pass http://funnel_backend/api/v1/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # TerminusDB (선택적 - 일반적으로는 내부에서만 접근)
        location /terminusdb/ {
            # 강력한 접근 제한 권장
            # allow 10.0.0.0/8;
            # deny all;
            
            # 인증 추가 (선택사항)
            # auth_basic "TerminusDB Admin";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://terminusdb_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # API 문서 (Swagger/ReDoc)
        location /docs {
            proxy_pass http://bff_backend/docs;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /redoc {
            proxy_pass http://bff_backend/redoc;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 헬스 체크 엔드포인트
        location /health {
            access_log off;
            default_type application/json;
            return 200 '{"status":"healthy"}';
        }

        # 각 서비스의 헬스 체크
        location /health/oms {
            proxy_pass http://oms_backend/health;
            access_log off;
        }

        location /health/bff {
            proxy_pass http://bff_backend/health;
            access_log off;
        }

        location /health/funnel {
            proxy_pass http://funnel_backend/health;
            access_log off;
        }

        # 정적 파일 (있는 경우)
        location /static/ {
            alias /var/www/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # 루트 경로
        location / {
            # BFF로 프록시 또는 정적 프론트엔드 제공
            proxy_pass http://bff_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 에러 페이지
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # 모니터링용 서버 블록 (선택사항)
    server {
        listen 8080;
        server_name localhost;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}